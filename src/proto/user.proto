syntax = "proto3";

package user_package;  

service User {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc CheckUser(CheckUserRequest) returns (CheckUserResponse) {}
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {}
  rpc FetchAllUsers(FetchAllUsersRequest) returns (FetchAllUsersResponse) {}
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {}
  rpc ApplyDoctor(ApplyDoctorRequest) returns (ApplyDoctorResponse) {}
  rpc FetchAllDoctors(fectAllDoctorsRequest) returns (fectAllDoctorsResponse){}
  rpc UpdateDoctorStatusAfterAdminApprove(UpdateDoctorStatusAfterAdminApproveRequest) returns (UpdateDoctorStatusAfterAdminApproveResponse){}
  rpc UpdateDoctorStatusAndUserRole(UpdateDoctorStatusAndUserRoleRequest) returns (UpdateDoctorStatusAndUserRoleResponse) {}
  rpc DeleteDoctorAfterAdminReject (DeleteDoctorRequest) returns (DeleteDoctorResponse){}
  rpc FetchDoctorDashBoardData  (FetchDoctorDashBoardDataRequest) returns (FetchDoctorDashBoardDataResponse) {}
  rpc fectingUserProfileDatas (fectingUserProfileDatasRequest) returns (fectingUserProfileDatasResponse) {}
  rpc changingUserPassWord (changingUserPassWordRequest) returns (changingUserPassWordResponse) {}
}


message changingUserPassWordRequest {
string email=1;
string password=2;
}


message changingUserPassWordResponse {
 bool success = 1;
}


message fectingUserProfileDatasRequest {
string email = 1;
}


message fectingUserProfileDatasResponse{
  UserData user = 1;
}



message FetchDoctorDashBoardDataRequest {
 string email = 1;
}


message FetchDoctorDashBoardDataResponse {
Doctor doctor = 1;
}


 message DeleteDoctorRequest {
 string email = 1;
 }

 message  DeleteDoctorResponse{
bool success = 1;
 }

message UpdateDoctorStatusAndUserRoleRequest {
   string email = 1;
}

message UpdateDoctorStatusAndUserRoleResponse {
 bool success = 1;
}



message UpdateDoctorStatusAfterAdminApproveRequest {
  string email = 1;
}

message UpdateDoctorStatusAfterAdminApproveResponse {
  bool success = 1;
}



message Doctor {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string email = 4;
  string phoneNumber = 5;
  string licenseNumber = 6;
  string medicalLicenseNumber = 7;
  string specialty = 8;
  string qualifications = 9;
  bool agreeTerms = 10;
  string profileImageUrl = 11;
  string medicalLicenseUrl = 12;
  string status = 13;
  string createdAt = 14;
}


message fectAllDoctorsRequest {
  
}


message fectAllDoctorsResponse {
  repeated Doctor doctors = 1;
}




message UserData {  
  string id = 1;
  string name = 2;
  string email = 3;
  string password = 4; // can be empty for Google Auth
  string phone_number = 5;
  string created_at = 6;
  int32 version = 7;
  string google_id = 8; // added googleId here
  string role = 9; 
  bool isActive = 10;
}

message RegisterRequest {
  string name = 1;
  string email = 2;
  string password = 3; // can be optional
  string phone_number = 4;
  string google_id = 5; // added for Google Auth flow
}

message RegisterResponse {
  UserData user = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message CheckUserRequest {
  string email = 1;
  string phone_number = 2;
}

message CheckUserResponse {
  string message = 1;
  bool success = 2;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
  string google_id = 3;
  string name = 4;
}




message LoginUserResponse {
  UserData user = 1;
  string access_token = 2;  // snake_case
  string refresh_token = 3; // snake_case
}

message FetchAllUsersRequest {
  // Empty request - could add pagination parameters later
  int32 page = 1;
  int32 limit = 2;
}

message FetchAllUsersResponse {
  repeated UserData users = 1;
}

message ResetPasswordRequest {
  string email = 1;
  string newPassword = 2;
}

message ResetPasswordResponse {
  bool success = 1;
}

message DoctorApplication {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  string phone_number = 5;
  string license_number = 6;
  string specialty = 7;
  string qualifications = 8;
  string medical_license_number = 9;
  repeated string document_urls = 10;
  string status = 11; // "pending", "approved", "rejected"
  string created_at = 12;
  string updated_at = 13;
}

message ApplyDoctorRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string phone_number = 5;
  string license_number = 6;
  string specialty = 7;
  string qualifications = 8;
  string medical_license_number = 9;
  bool agree_terms = 10;
  repeated string document_urls = 11; 
  string userId = 12; 
}

message ApplyDoctorResponse {
  bool success = 1;
  string id = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  string phone_number = 6;
  string specialty = 7;
  string status = 8;
   string message=9;
}